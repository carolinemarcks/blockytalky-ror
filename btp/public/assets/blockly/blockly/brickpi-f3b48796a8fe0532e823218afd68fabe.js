/**
 * Visual Blocks Language
 *
 * Copyright 2012 Google Inc.
 * http://blockly.googlecode.com/
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Blockly.Language||(Blockly.Language={});var prefix="message.getContent()";Blockly.Language.sensor_touch={category:"Sensors",helpUrl:"",init:function(){this.setColour(50),this.appendDummyInput("").appendTitle("Touch Sensor:"),this.appendDummyInput("").appendTitle("Port").appendTitle(new Blockly.FieldDropdown([["1","1"],["2","2"],["3","3"],["4","4"]]),"port"),this.appendDummyInput("").appendTitle(new Blockly.FieldDropdown([["is pressed","1"],["is released","0"]]),"status"),this.setInputsInline(!0),this.setOutput(!0,"Boolean"),this.setPreviousStatement(!1),this.setNextStatement(!1),this.setTooltip("Returns the status of a touch sensor")}},Blockly.Language.sensor_light={category:"Sensors",helpUrl:"",init:function(){this.setColour(50),this.appendDummyInput("").appendTitle("Light Sensor:"),this.appendDummyInput("").appendTitle("Port").appendTitle(new Blockly.FieldDropdown([["1","1"],["2","2"],["3","3"],["4","4"]]),"port"),this.setInputsInline(!0),this.setOutput(!0,"Number"),this.setTooltip("Returns the value of a light sensor")}},Blockly.Language.sensor_ultrasonic={category:"Sensors",helpUrl:"",init:function(){this.setColour(50),this.appendDummyInput("").appendTitle("Ultrasonic Sensor:"),this.appendDummyInput("").appendTitle("Port").appendTitle(new Blockly.FieldDropdown([["1","1"],["2","2"],["3","3"],["4","4"]]),"port"),this.setInputsInline(!0),this.setOutput(!0,"Number"),this.setTooltip("Returns the value of an ultrasonic sensor")}},Blockly.Language.sensor_sound={category:"Sensors",helpUrl:"",init:function(){this.setColour(50),this.appendDummyInput("").appendTitle("Sound Sensor:"),this.appendDummyInput("").appendTitle("Port").appendTitle(new Blockly.FieldDropdown([["1","1"],["2","2"],["3","3"],["4","4"]]),"port"),this.setInputsInline(!0),this.setOutput(!0,"Number"),this.setTooltip("Returns the value of a sound sensor")}},Blockly.Language.motor_set={category:"Motors",helpUrl:"http://www.google.com",init:function(){this.setColour(300),this.appendDummyInput("").appendTitle("Set motor").appendTitle(new Blockly.FieldDropdown([["1","1"],["2","2"],["3","3"],["4","4"],["All","All"]]),"motor_num"),this.appendDummyInput("").appendTitle(" to power"),this.appendValueInput("motor_power").setCheck("Number"),this.setInputsInline(!0),this.setOutput(!1),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setTooltip("Motor 1-4, Power -100 to 100")}},Blockly.Language.motor_get_encoder={category:"Motors",helpUrl:"",init:function(){this.setColour(300),this.appendDummyInput("").appendTitle("Encoder Value"),this.appendDummyInput("").appendTitle("Motor").appendTitle(new Blockly.FieldDropdown([["1","1"],["2","2"],["3","3"],["4","4"]]),"enc"),this.setInputsInline(!0),this.setOutput(!0,"Number"),this.setTooltip("Returns absolute rotation of specified motor")}},Blockly.Language.motor_get_encoder={category:"Motors",helpUrl:"",init:function(){this.setColour(300),this.appendDummyInput("").appendTitle("Encoder Value"),this.appendDummyInput("").appendTitle("Motor").appendTitle(new Blockly.FieldDropdown([["1","1"],["2","2"],["3","3"],["4","4"]]),"enc"),this.setInputsInline(!0),this.setOutput(!0,"Number"),this.setTooltip("Returns absolute rotation of specified motor")}},Blockly.Language.pin_in={category:"GPIO",helpUrl:"",init:function(){this.setColour(0),this.appendDummyInput("").appendTitle("GPIO In Pin:").appendTitle(new Blockly.FieldDropdown([["12","12"],["16","16"],["18","18"],["22","22"]]),"gpio_in_pin"),this.appendDummyInput("").appendTitle("Value:").appendTitle(new Blockly.FieldDropdown([["HIGH","1"],["LOW","0"]]),"gpio_in_value"),this.setInputsInline(!0),this.setOutput(!1),this.setPreviousStatement(!0),this.setNextStatement(!0)}},Blockly.Language.pin_out={category:"GPIO",helpUrl:"",init:function(){this.setColour(0),this.appendDummyInput("").appendTitle("GPIO Out Pin:").appendTitle(new Blockly.FieldDropdown([["7","7"],["11","11"],["13","13"],["15","15"]]),"gpio_out_pin"),this.appendDummyInput("").appendTitle("Value:").appendTitle(new Blockly.FieldDropdown([["HIGH","1"],["LOW","0"]]),"gpio_out_value"),this.setInputsInline(!0),this.setOutput(!1),this.setPreviousStatement(!0),this.setNextStatement(!0)}},Blockly.Language.sensor_new_val={category:"Sensors",helpUrl:"",init:function(){this.setColour(300),this.appendDummyInput("").appendTitle("Unread Data On:"),this.appendDummyInput("").appendTitle(new Blockly.FieldDropdown([["Sensor 1","sensor1"],["Sensor 2","sensor2"],["Sensor 3","sensor3"],["Sensor 4","sensor4"],["Sensor 5","sensor5"],["Encoder 1","encoder1"],["Encoder 2","encoder2"],["Encoder 3","encoder3"],["Encoder 4","encoder4"]]),"port"),this.setInputsInline(!0),this.setOutput(!0,"Boolean"),this.setTooltip("Returns true if there is unread data on the specified port")}},Blockly.Language.led_set={category:"LED",helpUrl:"",init:function(){this.setColour(300),this.appendDummyInput("").appendTitle("Set LEDs:"),this.appendDummyInput("").appendTitle("LED1").appendTitle(new Blockly.FieldDropdown([["On","On"],["Off","Off"]]),"led1"),this.appendDummyInput("").appendTitle("LED2").appendTitle(new Blockly.FieldDropdown([["On","On"],["Off","Off"]]),"led2"),this.setInputsInline(!0),this.setOutput(!1),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setTooltip("Set LEDs to on or off")}},Blockly.Language.time_sleep={category:"Time",helpUrl:"",init:function(){this.setColour(300),this.appendDummyInput("").appendTitle("Wait for").appendTitle(new Blockly.FieldTextInput("1000",Blockly.Language.math_number.validator),"time_sleep"),this.appendDummyInput("").appendTitle("ms"),this.setInputsInline(!0),this.setOutput(!1),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setTooltip("Pause for ___ milliseconds")}},Blockly.Language.print_print={category:"Print",helpUrl:"",init:function(){this.setColour(300),this.appendDummyInput("").appendTitle("Print: "),this.appendValueInput("to_print"),this.setInputsInline(!0),this.setOutput(!1),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setTooltip("Prints to terminal on Pi")}},Blockly.Language.controls_inf_loop={helpUrl:"",init:function(){this.setColour(120),this.appendDummyInput("").appendTitle("repeat forever"),this.appendStatementInput("DO").appendTitle(Blockly.LANG_CONTROLS_WHILEUNTIL_INPUT_DO),this.setPreviousStatement(!0),this.setNextStatement(!0)}},Blockly.Python=Blockly.Generator.get("Python"),Blockly.Python.motor_set=function(){var e,t=Blockly.Python.valueToCode(this,"motor_power",Blockly.Python.ORDER_NONE),n=this.getTitleValue("motor_num");return"All"==n?e='toSend = Message(self.hostname, None, "HwCmd", Message.createImage(motor1='+t+", motor2="+t+", motor3="+t+"))\n":"1"==n?e='toSend = Message(self.hostname, None, "HwCmd", Message.createImage(motor1='+t+"))\n":"2"==n?e='toSend = Message(self.hostname, None, "HwCmd", Message.createImage(motor2='+t+"))\n":"3"==n?e='toSend = Message(self.hostname, None, "HwCmd", Message.createImage(motor3='+t+"))\n":"4"==n&&(e='toSend = Message(self.hostname, None, "HwCmd", Message.createImage(motor4='+t+"))\n"),e+="toSend = Message.encode(toSend)\n",e+='channel.basic_publish(exchange="", routing_key="HwCmd", body=toSend)\ntime.sleep(.01)\n'},Blockly.Python.pin_in=function(){{var e;Blockly.Python.valueToCode(this,"gpio_in_value",Blockly.Python.ORDER_NONE)}e=this.getTitleValue("gpio_in_value");var t,n=this.getTitleValue("gpio_in_pin");return"12"==n?t='toSend = Message(self.hostname, None, "HwCmd", Message.createImage(pin12='+e+"))\n":"16"==n?t='toSend = Message(self.hostname, None, "HwCmd", Message.createImage(pin16='+e+"))\n":"18"==n?t='toSend = Message(self.hostname, None, "HwCmd", Message.createImage(pin18='+e+"))\n":"22"==n&&(t='toSend = Message(self.hostname, None, "HwCmd", Message.createImage(pin22='+e+"))\n"),t+="toSend = Message.encode(toSend)\n",t+='channel.basic_publish(exchange="", routing_key="HwCmd", body=toSend)\ntime.sleep(.01)\n'},Blockly.Python.pin_out=function(){{var e;Blockly.Python.valueToCode(this,"gpio_out_value",Blockly.Python.ORDER_NONE)}e=this.getTitleValue("gpio_out_value");var t,n=this.getTitleValue("gpio_out_pin");return"7"==n?t='toSend = Message(self.hostname, None, "HwCmd", Message.createImage(pin7='+e+"))\n":"11"==n?t='toSend = Message(self.hostname, None, "HwCmd", Message.createImage(pin11='+e+"))\n":"13"==n?t='toSend = Message(self.hostname, None, "HwCmd", Message.createImage(pin13='+e+"))\n":"15"==n&&(t='toSend = Message(self.hostname, None, "HwCmd", Message.createImage(pin15='+e+"))\n"),t+="toSend = Message.encode(toSend)\n",t+='channel.basic_publish(exchange="", routing_key="HwCmd", body=toSend)\ntime.sleep(.01)\n'},Blockly.Python.motor_all_stop=function(){var e='toSend= Message(self.hostname, None, "HwCmd", Message.createImage(motor1=0, motor2=0, motor3=0))\nMessage.encode(toSend)\nchannel.basic_publish(exchange="", routing_key="HwCmd", body=toSend)\ntime.sleep(.01)\n';return e},Blockly.Python.motor_get_encoder=function(){var e=this.getTitleValue("enc");e-=1;var t='self.getSensorValue("encoder", '+e+")";return[t,Blockly.Python.ORDER_ATOMIC]},Blockly.Python.sensor_new_val=function(){var e=this.getTitleValue("port"),t='self.sensorStatus["'+e+'"]';return[t,Blockly.Python.ORDER_ATOMIC]},Blockly.Python.led_set=function(){var e,t;return e="On"==this.getTitleValue("led1")?1:0,t="On"==this.getTitleValue("led2")?1:0,code='toSend = Message(self.hostname, None, "HwCmd", Message.createImage(led1='+e+", led2="+t+'))\nchannel.basic_publish(exchange="", routing_key="HwCmd", body=toSend)\ntime.sleep(.01)\n'},Blockly.Python.time_sleep=function(){var e=parseInt(this.getTitleValue("time_sleep"));e/=1e3;var t="time.sleep("+e+")\n";return t},Blockly.Python.print_print=function(){var e=Blockly.Python.valueToCode(this,"to_print",Blockly.Python.ORDER_NONE),t="print "+e+"\n";return t},Blockly.Python.controls_inf_loop=function(){var e=Blockly.Python.statementToCode(this,"DO")||"  pass\n",t="while True:\n"+e;return t},Blockly.Python.sensor_touch=function(){var e=this.getTitleValue("port"),t=this.getTitleValue("status");return 1==t?['self.robot["sensors"]['+(e-1)+"] < 200",Blockly.Python.ORDER_ATOMIC]:0==t?['self.robot["sensors"]['+(e-1)+"] > 200",Blockly.Python.ORDER_ATOMIC]:void 0},Blockly.Python.sensor_light=function(){var e=this.getTitleValue("port");return['self.robot["sensors"]['+(e-1)+"]",Blockly.Python.ORDER_ATOMIC]},Blockly.Python.sensor_ultrasonic=function(){var e=this.getTitleValue("port");return['self.robot["sensors"]['+(e-1)+"]",Blockly.Python.ORDER_ATOMIC]},Blockly.Python.sensor_sound=function(){var e=this.getTitleValue("port");return['self.robot["sensors"]['+(e-1)+"]",Blockly.Python.ORDER_ATOMIC]};